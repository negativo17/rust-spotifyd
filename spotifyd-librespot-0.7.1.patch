diff -Naur spotifyd-0.4.1.old/Cargo.lock spotifyd-0.4.1/Cargo.lock
--- spotifyd-0.4.1.old/Cargo.lock	2025-09-23 09:09:43.119550747 +0200
+++ spotifyd-0.4.1/Cargo.lock	2025-09-23 14:04:19.995861603 +0200
@@ -18,6 +18,12 @@
 checksum = "f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe"
 
 [[package]]
+name = "adler2"
+version = "2.0.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "320119579fcad9c21884f5c4861d16174d0e06250625266f50fe6898340abefa"
+
+[[package]]
 name = "aes"
 version = "0.8.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -38,6 +44,12 @@
 ]
 
 [[package]]
+name = "allocator-api2"
+version = "0.2.21"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "683d7910e743518b0e34f1186f92494becacb047c7b6bf616c96772180fef923"
+
+[[package]]
 name = "alsa"
 version = "0.9.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -165,7 +177,7 @@
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "29003a681b2b9465c1139bfb726da452a841a8b025f35953f3bce71139f10b21"
 dependencies = [
- "bindgen 0.69.5",
+ "bindgen",
  "cc",
  "cmake",
  "dunce",
@@ -182,7 +194,7 @@
 dependencies = [
  "aws-lc-fips-sys",
  "aws-lc-sys",
- "untrusted 0.7.1",
+ "untrusted",
  "zeroize",
 ]
 
@@ -192,7 +204,7 @@
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "6bbe221bbf523b625a4dd8585c7f38166e31167ec2ca98051dbcb4c3b6e825d2"
 dependencies = [
- "bindgen 0.69.5",
+ "bindgen",
  "cc",
  "cmake",
  "dunce",
@@ -209,19 +221,13 @@
  "cc",
  "cfg-if",
  "libc",
- "miniz_oxide",
+ "miniz_oxide 0.7.4",
  "object",
  "rustc-demangle",
 ]
 
 [[package]]
 name = "base64"
-version = "0.13.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8"
-
-[[package]]
-name = "base64"
 version = "0.21.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567"
@@ -247,7 +253,7 @@
  "bitflags 2.9.0",
  "cexpr",
  "clang-sys",
- "itertools 0.12.1",
+ "itertools",
  "lazy_static",
  "lazycell",
  "log",
@@ -262,24 +268,6 @@
 ]
 
 [[package]]
-name = "bindgen"
-version = "0.70.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f49d8fed880d473ea71efb9bf597651e77201bdd4893efe54c9e5d65ae04ce6f"
-dependencies = [
- "bitflags 2.9.0",
- "cexpr",
- "clang-sys",
- "itertools 0.13.0",
- "proc-macro2",
- "quote",
- "regex",
- "rustc-hash",
- "shlex",
- "syn",
-]
-
-[[package]]
 name = "bitflags"
 version = "1.3.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -511,16 +499,6 @@
 ]
 
 [[package]]
-name = "core-foundation"
-version = "0.10.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b55271e5c8c478ad3f38ad24ef34923091e0548492a266d19b3c0b4d82574c63"
-dependencies = [
- "core-foundation-sys",
- "libc",
-]
-
-[[package]]
 name = "core-foundation-sys"
 version = "0.8.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -528,32 +506,25 @@
 
 [[package]]
 name = "coreaudio-rs"
-version = "0.11.3"
+version = "0.13.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "321077172d79c662f64f5071a03120748d5bb652f5231570141be24cfcd2bace"
+checksum = "1aae284fbaf7d27aa0e292f7677dfbe26503b0d555026f702940805a630eac17"
 dependencies = [
  "bitflags 1.3.2",
- "core-foundation-sys",
- "coreaudio-sys",
-]
-
-[[package]]
-name = "coreaudio-sys"
-version = "0.2.16"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2ce857aa0b77d77287acc1ac3e37a05a8c95a2af3647d23b15f263bdaeb7562b"
-dependencies = [
- "bindgen 0.70.1",
+ "libc",
+ "objc2-audio-toolbox",
+ "objc2-core-audio",
+ "objc2-core-audio-types",
+ "objc2-core-foundation",
 ]
 
 [[package]]
 name = "cpal"
-version = "0.15.3"
+version = "0.16.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "873dab07c8f743075e57f524c583985fbaf745602acbe916a01539364369a779"
+checksum = "cbd307f43cc2a697e2d1f8bc7a1d824b5269e052209e28883e5bc04d095aaa3f"
 dependencies = [
  "alsa",
- "core-foundation-sys",
  "coreaudio-rs",
  "dasp_sample",
  "jack",
@@ -563,7 +534,11 @@
  "mach2",
  "ndk",
  "ndk-context",
- "oboe",
+ "num-derive",
+ "num-traits",
+ "objc2-audio-toolbox",
+ "objc2-core-audio",
+ "objc2-core-audio-types",
  "wasm-bindgen",
  "wasm-bindgen-futures",
  "web-sys",
@@ -580,6 +555,15 @@
 ]
 
 [[package]]
+name = "crc32fast"
+version = "1.5.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "9481c1c90cbf2ac953f07c8d4a58aa3945c425b7185c9154d67a65e4230da511"
+dependencies = [
+ "cfg-if",
+]
+
+[[package]]
 name = "crypto-common"
 version = "0.1.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -650,9 +634,9 @@
 
 [[package]]
 name = "data-encoding"
-version = "2.8.0"
+version = "2.9.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "575f75dfd25738df5b91b8e43e14d44bda14637a58fae779fd2b064f8bf3e010"
+checksum = "2a2330da5de22e8a3cb63252ce2abb30116bf5265e89c0e01bc17015ce30a476"
 
 [[package]]
 name = "dbus"
@@ -772,6 +756,16 @@
 ]
 
 [[package]]
+name = "dispatch2"
+version = "0.3.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "89a09f22a6c6069a18470eb92d2298acf25463f14256d24778e1230d789a2aec"
+dependencies = [
+ "bitflags 2.9.0",
+ "objc2",
+]
+
+[[package]]
 name = "displaydoc"
 version = "0.2.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -876,12 +870,43 @@
 checksum = "0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80"
 
 [[package]]
+name = "flate2"
+version = "1.1.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "4a3d7db9596fecd151c5f638c0ee5d5bd487b6e0ea232e5dc96d5250f6f94b1d"
+dependencies = [
+ "crc32fast",
+ "miniz_oxide 0.8.9",
+]
+
+[[package]]
 name = "fnv"
 version = "1.0.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1"
 
 [[package]]
+name = "foldhash"
+version = "0.1.5"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "d9c4f5dac5e15c24eb999c26181a6ca40b39fe946cbe4c263c7209467bc83af2"
+
+[[package]]
+name = "foreign-types"
+version = "0.3.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1"
+dependencies = [
+ "foreign-types-shared",
+]
+
+[[package]]
+name = "foreign-types-shared"
+version = "0.1.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b"
+
+[[package]]
 name = "form_urlencoded"
 version = "1.2.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -1031,8 +1056,10 @@
 checksum = "43a49c392881ce6d5c3b8cb70f98717b7c07aabbdff06687b9030dbfbe2725f8"
 dependencies = [
  "cfg-if",
+ "js-sys",
  "libc",
  "wasi 0.13.3+wasi-0.2.2",
+ "wasm-bindgen",
  "windows-targets 0.52.6",
 ]
 
@@ -1050,39 +1077,23 @@
 
 [[package]]
 name = "governor"
-version = "0.6.3"
+version = "0.10.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "68a7f542ee6b35af73b06abc0dad1c1bae89964e4e253bc4b587b91c9637867b"
+checksum = "444405bbb1a762387aa22dd569429533b54a1d8759d35d3b64cb39b0293eaa19"
 dependencies = [
  "cfg-if",
- "futures",
+ "futures-sink",
  "futures-timer",
- "no-std-compat",
+ "futures-util",
+ "getrandom 0.3.1",
+ "hashbrown",
  "nonzero_ext",
  "parking_lot",
  "portable-atomic",
- "rand 0.8.5",
+ "rand 0.9.0",
  "smallvec",
  "spinning_top",
-]
-
-[[package]]
-name = "h2"
-version = "0.3.26"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "81fe527a889e1532da5c525686d96d4c2e74cdd345badf8dfef9f6b39dd5f5e8"
-dependencies = [
- "bytes",
- "fnv",
- "futures-core",
- "futures-sink",
- "futures-util",
- "http 0.2.12",
- "indexmap",
- "slab",
- "tokio",
- "tokio-util",
- "tracing",
+ "web-time",
 ]
 
 [[package]]
@@ -1096,7 +1107,7 @@
  "fnv",
  "futures-core",
  "futures-sink",
- "http 1.3.1",
+ "http",
  "indexmap",
  "slab",
  "tokio",
@@ -1109,6 +1120,11 @@
 version = "0.15.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289"
+dependencies = [
+ "allocator-api2",
+ "equivalent",
+ "foldhash",
+]
 
 [[package]]
 name = "headers"
@@ -1119,7 +1135,7 @@
  "base64 0.21.7",
  "bytes",
  "headers-core",
- "http 1.3.1",
+ "http",
  "httpdate",
  "mime",
  "sha1",
@@ -1131,7 +1147,7 @@
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "54b4a22553d4242c49fddb9ba998a99962b5cc6f22cb5a3482bec22522403ce4"
 dependencies = [
- "http 1.3.1",
+ "http",
 ]
 
 [[package]]
@@ -1177,17 +1193,6 @@
 
 [[package]]
 name = "http"
-version = "0.2.12"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "601cbb57e577e2f5ef5be8e7b83f0f63994f25aa94d673e54a92d5c516d101f1"
-dependencies = [
- "bytes",
- "fnv",
- "itoa",
-]
-
-[[package]]
-name = "http"
 version = "1.3.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "f4a85d31aea989eead29a3aaf9e1115a180df8282431156e533de47660892565"
@@ -1199,23 +1204,12 @@
 
 [[package]]
 name = "http-body"
-version = "0.4.6"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7ceab25649e9960c0311ea418d17bee82c0dcec1bd053b5f9a66e265a693bed2"
-dependencies = [
- "bytes",
- "http 0.2.12",
- "pin-project-lite",
-]
-
-[[package]]
-name = "http-body"
 version = "1.0.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "1efedce1fb8e6913f23e0c92de8e62cd5b772a67e7b3946df930a62566c93184"
 dependencies = [
  "bytes",
- "http 1.3.1",
+ "http",
 ]
 
 [[package]]
@@ -1226,8 +1220,8 @@
 dependencies = [
  "bytes",
  "futures-core",
- "http 1.3.1",
- "http-body 1.0.1",
+ "http",
+ "http-body",
  "pin-project-lite",
 ]
 
@@ -1245,30 +1239,6 @@
 
 [[package]]
 name = "hyper"
-version = "0.14.32"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "41dfc780fdec9373c01bae43289ea34c972e40ee3c9f6b3c8801a35f35586ce7"
-dependencies = [
- "bytes",
- "futures-channel",
- "futures-core",
- "futures-util",
- "h2 0.3.26",
- "http 0.2.12",
- "http-body 0.4.6",
- "httparse",
- "httpdate",
- "itoa",
- "pin-project-lite",
- "socket2",
- "tokio",
- "tower-service",
- "tracing",
- "want",
-]
-
-[[package]]
-name = "hyper"
 version = "1.6.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "cc2b571658e38e0c01b1fdca3bbbe93c00d3d71693ff2770043f8c29bc7d6f80"
@@ -1276,9 +1246,9 @@
  "bytes",
  "futures-channel",
  "futures-util",
- "h2 0.4.8",
- "http 1.3.1",
- "http-body 1.0.1",
+ "h2",
+ "http",
+ "http-body",
  "httparse",
  "httpdate",
  "itoa",
@@ -1297,87 +1267,57 @@
  "bytes",
  "futures-util",
  "headers",
- "http 1.3.1",
- "hyper 1.6.0",
- "hyper-rustls 0.26.0",
+ "http",
+ "hyper",
+ "hyper-tls",
  "hyper-util",
+ "native-tls",
  "pin-project-lite",
- "rustls-native-certs 0.7.3",
  "tokio",
- "tokio-rustls 0.25.0",
+ "tokio-native-tls",
  "tower-service",
- "webpki",
 ]
 
 [[package]]
-name = "hyper-rustls"
-version = "0.24.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ec3efd23720e2049821a693cbc7e65ea87c72f1c58ff2f9522ff332b1491e590"
-dependencies = [
- "futures-util",
- "http 0.2.12",
- "hyper 0.14.32",
- "rustls 0.21.12",
- "tokio",
- "tokio-rustls 0.24.1",
-]
-
-[[package]]
-name = "hyper-rustls"
-version = "0.26.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a0bea761b46ae2b24eb4aef630d8d1c398157b6fc29e6350ecf090a0b70c952c"
-dependencies = [
- "futures-util",
- "http 1.3.1",
- "hyper 1.6.0",
- "hyper-util",
- "log",
- "rustls 0.22.4",
- "rustls-native-certs 0.7.3",
- "rustls-pki-types",
- "tokio",
- "tokio-rustls 0.25.0",
- "tower-service",
-]
-
-[[package]]
-name = "hyper-rustls"
-version = "0.27.5"
+name = "hyper-tls"
+version = "0.6.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2d191583f3da1305256f22463b9bb0471acad48a4e534a5218b9963e9c1f59b2"
+checksum = "70206fc6890eaca9fde8a0bf71caa2ddfc9fe045ac9e5c70df101a7dbde866e0"
 dependencies = [
- "futures-util",
- "http 1.3.1",
- "hyper 1.6.0",
+ "bytes",
+ "http-body-util",
+ "hyper",
  "hyper-util",
- "log",
- "rustls 0.23.23",
- "rustls-native-certs 0.8.1",
- "rustls-pki-types",
+ "native-tls",
  "tokio",
- "tokio-rustls 0.26.2",
+ "tokio-native-tls",
  "tower-service",
 ]
 
 [[package]]
 name = "hyper-util"
-version = "0.1.10"
+version = "0.1.16"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "df2dcfbe0677734ab2f3ffa7fa7bfd4706bfdc1ef393f2ee30184aed67e631b4"
+checksum = "8d9b05277c7e8da2c93a568989bb6207bef0112e8d17df7a6eda4a3cf143bc5e"
 dependencies = [
+ "base64 0.22.1",
  "bytes",
  "futures-channel",
+ "futures-core",
  "futures-util",
- "http 1.3.1",
- "http-body 1.0.1",
- "hyper 1.6.0",
+ "http",
+ "http-body",
+ "hyper",
+ "ipnet",
+ "libc",
+ "percent-encoding",
  "pin-project-lite",
- "socket2",
+ "socket2 0.6.0",
+ "system-configuration",
  "tokio",
  "tower-service",
  "tracing",
+ "windows-registry",
 ]
 
 [[package]]
@@ -1590,25 +1530,45 @@
 checksum = "469fb0b9cefa57e3ef31275ee7cacb78f2fdca44e4765491884a2b119d4eb130"
 
 [[package]]
-name = "is_terminal_polyfill"
-version = "1.70.1"
+name = "iri-string"
+version = "0.7.8"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf"
+checksum = "dbc5ebe9c3a1a7a5127f920a418f7585e9e758e911d0466ed004f393b0e380b2"
+dependencies = [
+ "memchr",
+ "serde",
+]
 
 [[package]]
-name = "itertools"
-version = "0.12.1"
+name = "is-docker"
+version = "0.2.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569"
+checksum = "928bae27f42bc99b60d9ac7334e3a21d10ad8f1835a4e12ec3ec0464765ed1b3"
 dependencies = [
- "either",
+ "once_cell",
+]
+
+[[package]]
+name = "is-wsl"
+version = "0.4.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "173609498df190136aa7dea1a91db051746d339e18476eed5ca40521f02d7aa5"
+dependencies = [
+ "is-docker",
+ "once_cell",
 ]
 
 [[package]]
+name = "is_terminal_polyfill"
+version = "1.70.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf"
+
+[[package]]
 name = "itertools"
-version = "0.13.0"
+version = "0.12.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186"
+checksum = "ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569"
 dependencies = [
  "either",
 ]
@@ -1621,11 +1581,11 @@
 
 [[package]]
 name = "jack"
-version = "0.11.4"
+version = "0.13.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0e5a18a3c2aefb354fb77111ade228b20267bdc779de84e7a4ccf7ea96b9a6cd"
+checksum = "f70ca699f44c04a32d419fc9ed699aaea89657fc09014bf3fa238e91d13041b9"
 dependencies = [
- "bitflags 1.3.2",
+ "bitflags 2.9.0",
  "jack-sys",
  "lazy_static",
  "libc",
@@ -1728,9 +1688,9 @@
 
 [[package]]
 name = "libc"
-version = "0.2.171"
+version = "0.2.175"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c19937216e9d3aa9956d9bb8dfc0b0c8beb6058fc4f7a4dc4d850edf86a237d6"
+checksum = "6a82ae493e598baaea5209805c49bbf2ea7de956d50d7da0da1164f9c6d28543"
 
 [[package]]
 name = "libdbus-sys"
@@ -1780,7 +1740,7 @@
  "log",
  "multimap",
  "rand 0.8.5",
- "socket2",
+ "socket2 0.5.8",
  "thiserror 1.0.69",
  "tokio",
 ]
@@ -1845,68 +1805,68 @@
 
 [[package]]
 name = "librespot-audio"
-version = "0.6.0"
+version = "0.7.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7e07566fe7553042936c61bbdd9bedb524114a904aa7f9738e266c641468bab8"
+checksum = "1ccbd884e99ad67528a34b7ce54f4ad872bee9f57b232441edb1befb8c60c88b"
 dependencies = [
  "aes",
  "bytes",
  "ctr",
  "futures-util",
  "http-body-util",
- "hyper 1.6.0",
+ "hyper",
  "hyper-util",
  "librespot-core",
  "log",
  "parking_lot",
  "tempfile",
- "thiserror 1.0.69",
+ "thiserror 2.0.12",
  "tokio",
 ]
 
 [[package]]
 name = "librespot-connect"
-version = "0.6.0"
+version = "0.7.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "67ce3a5634669ce051a425cff5437a474831111df045fd5a2bb37fabe316fa60"
+checksum = "9ee65534c5bb1e2179a8b4aefe2ec21021f17ea88917be7dfd264491725e663b"
 dependencies = [
- "form_urlencoded",
  "futures-util",
  "librespot-core",
  "librespot-playback",
  "librespot-protocol",
  "log",
  "protobuf",
- "rand 0.8.5",
- "serde",
+ "rand 0.9.0",
  "serde_json",
- "thiserror 1.0.69",
+ "thiserror 2.0.12",
  "tokio",
  "tokio-stream",
+ "uuid",
 ]
 
 [[package]]
 name = "librespot-core"
-version = "0.6.0"
+version = "0.7.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c4c76303efcf949a59f9380220ca420c4d72fa32dbb3641a0079f429cc5e44e7"
+checksum = "44bda6a0a394643182ced9bc4cdd0f6ef040852199419fd98a7b30bfb382a79a"
 dependencies = [
  "aes",
  "base64 0.22.1",
  "byteorder",
  "bytes",
  "data-encoding",
+ "flate2",
  "form_urlencoded",
  "futures-core",
  "futures-util",
  "governor",
  "hmac",
- "http 1.3.1",
+ "http",
  "http-body-util",
  "httparse",
- "hyper 1.6.0",
+ "hyper",
  "hyper-proxy2",
- "hyper-rustls 0.27.5",
+ "hyper-tls",
  "hyper-util",
  "librespot-oauth",
  "librespot-protocol",
@@ -1916,21 +1876,22 @@
  "num-derive",
  "num-integer",
  "num-traits",
- "once_cell",
  "parking_lot",
  "pbkdf2",
  "pin-project-lite",
  "priority-queue",
  "protobuf",
+ "protobuf-json-mapping",
  "quick-xml",
- "rand 0.8.5",
+ "rand 0.9.0",
+ "rand_distr",
  "rsa",
  "serde",
  "serde_json",
  "sha1",
  "shannon",
  "sysinfo",
- "thiserror 1.0.69",
+ "thiserror 2.0.12",
  "time",
  "tokio",
  "tokio-stream",
@@ -1943,9 +1904,9 @@
 
 [[package]]
 name = "librespot-discovery"
-version = "0.6.0"
+version = "0.7.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "94a952d28c775562b9b6039102c0e3a834cb31157fccb2f2a68a26dc4397fea8"
+checksum = "89815ace4105729574579909bf95a8d759db273f179e0195f9c3e1ada72e4dd5"
 dependencies = [
  "aes",
  "base64 0.22.1",
@@ -1956,24 +1917,24 @@
  "futures-util",
  "hmac",
  "http-body-util",
- "hyper 1.6.0",
+ "hyper",
  "hyper-util",
  "libmdns",
  "librespot-core",
  "log",
- "rand 0.8.5",
+ "rand 0.9.0",
  "serde_json",
  "serde_repr",
  "sha1",
- "thiserror 1.0.69",
+ "thiserror 2.0.12",
  "tokio",
 ]
 
 [[package]]
 name = "librespot-metadata"
-version = "0.6.0"
+version = "0.7.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7cf6d5c46a401b1dd3e062ebdce959aa694bbae1039841756545d2e9c4f8be5f"
+checksum = "d2f186eef62b0b3a156e9c204717e88c404396b36cf8f5c0e298f627bd4d2dca"
 dependencies = [
  "async-trait",
  "bytes",
@@ -1983,27 +1944,29 @@
  "protobuf",
  "serde",
  "serde_json",
- "thiserror 1.0.69",
+ "thiserror 2.0.12",
  "uuid",
 ]
 
 [[package]]
 name = "librespot-oauth"
-version = "0.6.0"
+version = "0.7.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "00dcad779aa6c3b442e493e2a40ca83a5c5fcf38a65c05b026c3587bd4f8d14f"
+checksum = "5abefd211d7ab9a850f951258c07a346391f235e512adcd478c069ef7916f8bb"
 dependencies = [
  "log",
  "oauth2",
- "thiserror 1.0.69",
+ "open",
+ "reqwest",
+ "thiserror 2.0.12",
  "url",
 ]
 
 [[package]]
 name = "librespot-playback"
-version = "0.6.0"
+version = "0.7.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4ed1f776a04c8c9275407f8d4df034f2615ea729ec6c6d0fa69f423fc571df64"
+checksum = "20ef81a3ccdff4c31f94b80efd89bfac737daddd94574e97026d86e6e1d072e0"
 dependencies = [
  "alsa",
  "cpal",
@@ -2015,22 +1978,23 @@
  "librespot-metadata",
  "log",
  "parking_lot",
+ "portable-atomic",
  "portaudio-rs",
- "rand 0.8.5",
+ "rand 0.9.0",
  "rand_distr",
  "rodio",
  "shell-words",
  "symphonia",
- "thiserror 1.0.69",
+ "thiserror 2.0.12",
  "tokio",
- "zerocopy 0.7.35",
+ "zerocopy",
 ]
 
 [[package]]
 name = "librespot-protocol"
-version = "0.6.0"
+version = "0.7.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "80802f52b5a1b3a2157454e6aca483a627fbf7b942e0a5fea037ebf3ed8b0546"
+checksum = "c647bea4e2c8d19215aabdb93c9c2243f09d1500e68cbd0c894d7a2ed822bb43"
 dependencies = [
  "protobuf",
  "protobuf-codegen",
@@ -2107,6 +2071,15 @@
 ]
 
 [[package]]
+name = "miniz_oxide"
+version = "0.8.9"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "1fa76a2c86f704bdb222d66965fb3d63269ce38518b83cb0575fca855ebb6316"
+dependencies = [
+ "adler2",
+]
+
+[[package]]
 name = "mio"
 version = "1.0.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -2127,10 +2100,27 @@
 ]
 
 [[package]]
+name = "native-tls"
+version = "0.2.14"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "87de3442987e9dbec73158d5c715e7ad9072fda936bb03d19d7fa10e00520f0e"
+dependencies = [
+ "libc",
+ "log",
+ "openssl",
+ "openssl-probe",
+ "openssl-sys",
+ "schannel",
+ "security-framework",
+ "security-framework-sys",
+ "tempfile",
+]
+
+[[package]]
 name = "ndk"
-version = "0.8.0"
+version = "0.9.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2076a31b7010b17a38c01907c45b945e8f11495ee4dd588309718901b1f7a5b7"
+checksum = "c3f42e7bbe13d351b6bead8286a43aac9534b82bd3cc43e47037f012ebfd62d4"
 dependencies = [
  "bitflags 2.9.0",
  "jni-sys",
@@ -2148,20 +2138,14 @@
 
 [[package]]
 name = "ndk-sys"
-version = "0.5.0+25.2.9519653"
+version = "0.6.0+11769913"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8c196769dd60fd4f363e11d948139556a344e79d451aeb2fa2fd040738ef7691"
+checksum = "ee6cda3051665f1fb8d9e08fc35c96d5a244fb1be711a03b71118828afc9a873"
 dependencies = [
  "jni-sys",
 ]
 
 [[package]]
-name = "no-std-compat"
-version = "0.4.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b93853da6d84c2e3c7d730d6473e8817692dd89be387eb01b94d7f108ecb5b8c"
-
-[[package]]
 name = "nom"
 version = "7.1.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -2194,7 +2178,6 @@
 dependencies = [
  "num-integer",
  "num-traits",
- "rand 0.8.5",
 ]
 
 [[package]]
@@ -2252,6 +2235,17 @@
 ]
 
 [[package]]
+name = "num-rational"
+version = "0.4.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "f83d14da390562dca69fc84082e73e548e1ad308d24accdedd2720017cb37824"
+dependencies = [
+ "num-bigint",
+ "num-integer",
+ "num-traits",
+]
+
+[[package]]
 name = "num-traits"
 version = "0.2.19"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -2293,14 +2287,14 @@
 
 [[package]]
 name = "oauth2"
-version = "4.4.2"
+version = "5.0.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c38841cdd844847e3e7c8d29cef9dcfed8877f8f56f9071f77843ecf3baf937f"
+checksum = "51e219e79014df21a225b1860a479e2dcd7cbd9130f4defd4bd0e191ea31d67d"
 dependencies = [
- "base64 0.13.1",
+ "base64 0.22.1",
  "chrono",
  "getrandom 0.2.15",
- "http 0.2.12",
+ "http",
  "rand 0.8.5",
  "reqwest",
  "serde",
@@ -2312,6 +2306,88 @@
 ]
 
 [[package]]
+name = "objc2"
+version = "0.6.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "561f357ba7f3a2a61563a186a163d0a3a5247e1089524a3981d49adb775078bc"
+dependencies = [
+ "objc2-encode",
+]
+
+[[package]]
+name = "objc2-audio-toolbox"
+version = "0.3.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "10cbe18d879e20a4aea544f8befe38bcf52255eb63d3f23eca2842f3319e4c07"
+dependencies = [
+ "bitflags 2.9.0",
+ "libc",
+ "objc2",
+ "objc2-core-audio",
+ "objc2-core-audio-types",
+ "objc2-core-foundation",
+ "objc2-foundation",
+]
+
+[[package]]
+name = "objc2-core-audio"
+version = "0.3.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "ca44961e888e19313b808f23497073e3f6b3c22bb485056674c8b49f3b025c82"
+dependencies = [
+ "dispatch2",
+ "objc2",
+ "objc2-core-audio-types",
+ "objc2-core-foundation",
+]
+
+[[package]]
+name = "objc2-core-audio-types"
+version = "0.3.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "c0f1cc99bb07ad2ddb6527ddf83db6a15271bb036b3eb94b801cd44fdc666ee1"
+dependencies = [
+ "bitflags 2.9.0",
+ "objc2",
+]
+
+[[package]]
+name = "objc2-core-foundation"
+version = "0.3.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "1c10c2894a6fed806ade6027bcd50662746363a9589d3ec9d9bef30a4e4bc166"
+dependencies = [
+ "bitflags 2.9.0",
+ "dispatch2",
+ "objc2",
+]
+
+[[package]]
+name = "objc2-encode"
+version = "4.1.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "ef25abbcd74fb2609453eb695bd2f860d389e457f67dc17cafc8b8cbc89d0c33"
+
+[[package]]
+name = "objc2-foundation"
+version = "0.3.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "900831247d2fe1a09a683278e5384cfb8c80c79fe6b166f9d14bfdde0ea1b03c"
+dependencies = [
+ "objc2",
+]
+
+[[package]]
+name = "objc2-io-kit"
+version = "0.3.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "71c1c64d6120e51cd86033f67176b1cb66780c2efe34dec55176f77befd93c0a"
+dependencies = [
+ "libc",
+ "objc2-core-foundation",
+]
+
+[[package]]
 name = "object"
 version = "0.32.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -2321,33 +2397,47 @@
 ]
 
 [[package]]
-name = "oboe"
-version = "0.6.1"
+name = "once_cell"
+version = "1.21.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "cde51589ab56b20a6f686b2c68f7a0bd6add753d697abf720d63f8db3ab7b1ad"
+
+[[package]]
+name = "open"
+version = "5.3.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e8b61bebd49e5d43f5f8cc7ee2891c16e0f41ec7954d36bcb6c14c5e0de867fb"
+checksum = "e2483562e62ea94312f3576a7aca397306df7990b8d89033e18766744377ef95"
 dependencies = [
- "jni",
- "ndk",
- "ndk-context",
- "num-derive",
- "num-traits",
- "oboe-sys",
+ "is-wsl",
+ "libc",
+ "pathdiff",
 ]
 
 [[package]]
-name = "oboe-sys"
-version = "0.6.1"
+name = "openssl"
+version = "0.10.73"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6c8bb09a4a2b1d668170cfe0a7d5bc103f8999fb316c98099b6a9939c9f2e79d"
+checksum = "8505734d46c8ab1e19a1dce3aef597ad87dcb4c37e7188231769bd6bd51cebf8"
 dependencies = [
- "cc",
+ "bitflags 2.9.0",
+ "cfg-if",
+ "foreign-types",
+ "libc",
+ "once_cell",
+ "openssl-macros",
+ "openssl-sys",
 ]
 
 [[package]]
-name = "once_cell"
-version = "1.21.0"
+name = "openssl-macros"
+version = "0.1.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "cde51589ab56b20a6f686b2c68f7a0bd6add753d697abf720d63f8db3ab7b1ad"
+checksum = "a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c"
+dependencies = [
+ "proc-macro2",
+ "quote",
+ "syn",
+]
 
 [[package]]
 name = "openssl-probe"
@@ -2356,6 +2446,18 @@
 checksum = "d05e27ee213611ffe7d6348b942e8f942b37114c00cc03cec254295a4a17852e"
 
 [[package]]
+name = "openssl-sys"
+version = "0.9.109"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "90096e2e47630d78b7d1c20952dc621f957103f8bc2c8359ec81290d75238571"
+dependencies = [
+ "cc",
+ "libc",
+ "pkg-config",
+ "vcpkg",
+]
+
+[[package]]
 name = "option-ext"
 version = "0.2.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -2400,6 +2502,12 @@
 checksum = "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a"
 
 [[package]]
+name = "pathdiff"
+version = "0.2.3"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "df94ce210e5bc13cb6651479fa48d14f601d9858cfe0467f43ae157023b938d3"
+
+[[package]]
 name = "pbkdf2"
 version = "0.12.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -2530,7 +2638,7 @@
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "85eae3c4ed2f50dcfe72643da4befc30deadb458a9b590d720cde2f2b1e97da9"
 dependencies = [
- "zerocopy 0.8.23",
+ "zerocopy",
 ]
 
 [[package]]
@@ -2545,9 +2653,9 @@
 
 [[package]]
 name = "priority-queue"
-version = "2.2.2"
+version = "2.5.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f759742601cb7ee8df8780e5f7f9ab7134fb6c5dd2748a61ddd7c960e24db2f8"
+checksum = "5676d703dda103cbb035b653a9f11448c0a7216c7926bd35fcb5865475d0c970"
 dependencies = [
  "autocfg",
  "equivalent",
@@ -2599,6 +2707,17 @@
 ]
 
 [[package]]
+name = "protobuf-json-mapping"
+version = "3.7.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "e0d6e4be637b310d8a5c02fa195243328e2d97fa7df1127a27281ef1187fcb1d"
+dependencies = [
+ "protobuf",
+ "protobuf-support",
+ "thiserror 1.0.69",
+]
+
+[[package]]
 name = "protobuf-parse"
 version = "3.7.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -2625,9 +2744,9 @@
 
 [[package]]
 name = "quick-xml"
-version = "0.36.2"
+version = "0.38.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f7649a7b4df05aed9ea7ec6f628c67c9953a43869b8bc50929569b2999d443fe"
+checksum = "42a232e7487fc2ef313d96dde7948e7a3c05101870d8985e4fd8d26aedd27b89"
 dependencies = [
  "memchr",
  "serde",
@@ -2661,7 +2780,7 @@
 dependencies = [
  "rand_chacha 0.9.0",
  "rand_core 0.9.3",
- "zerocopy 0.8.23",
+ "zerocopy",
 ]
 
 [[package]]
@@ -2704,12 +2823,12 @@
 
 [[package]]
 name = "rand_distr"
-version = "0.4.3"
+version = "0.5.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "32cb0b9bc82b0a0876c2dd994a7e7a2683d3e7390ca40e6886785ef0c7e3ee31"
+checksum = "6a8615d50dcf34fa31f7ab52692afec947c4dd0ab803cc87cb3b0b4570ff7463"
 dependencies = [
  "num-traits",
- "rand 0.8.5",
+ "rand 0.9.0",
 ]
 
 [[package]]
@@ -2763,67 +2882,51 @@
 
 [[package]]
 name = "reqwest"
-version = "0.11.27"
+version = "0.12.23"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "dd67538700a17451e7cba03ac727fb961abb7607553461627b97de0b89cf4a62"
+checksum = "d429f34c8092b2d42c7c93cec323bb4adeb7c67698f70839adec842ec10c7ceb"
 dependencies = [
- "base64 0.21.7",
+ "base64 0.22.1",
  "bytes",
- "encoding_rs",
+ "futures-channel",
  "futures-core",
  "futures-util",
- "h2 0.3.26",
- "http 0.2.12",
- "http-body 0.4.6",
- "hyper 0.14.32",
- "hyper-rustls 0.24.2",
- "ipnet",
+ "http",
+ "http-body",
+ "http-body-util",
+ "hyper",
+ "hyper-tls",
+ "hyper-util",
  "js-sys",
  "log",
- "mime",
- "once_cell",
+ "native-tls",
  "percent-encoding",
  "pin-project-lite",
- "rustls 0.21.12",
- "rustls-pemfile 1.0.4",
+ "rustls-pki-types",
  "serde",
  "serde_json",
  "serde_urlencoded",
  "sync_wrapper",
- "system-configuration",
  "tokio",
- "tokio-rustls 0.24.1",
+ "tokio-native-tls",
+ "tower",
+ "tower-http",
  "tower-service",
  "url",
  "wasm-bindgen",
  "wasm-bindgen-futures",
  "web-sys",
- "webpki-roots",
- "winreg",
-]
-
-[[package]]
-name = "ring"
-version = "0.17.14"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a4689e6c2294d81e88dc6261c768b63bc4fcdb852be6d1352498b114f61383b7"
-dependencies = [
- "cc",
- "cfg-if",
- "getrandom 0.2.15",
- "libc",
- "untrusted 0.9.0",
- "windows-sys 0.52.0",
 ]
 
 [[package]]
 name = "rodio"
-version = "0.19.0"
+version = "0.21.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6006a627c1a38d37f3d3a85c6575418cfe34a5392d60a686d0071e1c8d427acb"
+checksum = "e40ecf59e742e03336be6a3d53755e789fd05a059fa22dfa0ed624722319e183"
 dependencies = [
  "cpal",
- "thiserror 1.0.69",
+ "dasp_sample",
+ "num-rational",
 ]
 
 [[package]]
@@ -2885,118 +2988,12 @@
 ]
 
 [[package]]
-name = "rustls"
-version = "0.21.12"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3f56a14d1f48b391359b22f731fd4bd7e43c97f3c50eee276f3aa09c94784d3e"
-dependencies = [
- "log",
- "ring",
- "rustls-webpki 0.101.7",
- "sct",
-]
-
-[[package]]
-name = "rustls"
-version = "0.22.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "bf4ef73721ac7bcd79b2b315da7779d8fc09718c6b3d2d1b2d94850eb8c18432"
-dependencies = [
- "log",
- "ring",
- "rustls-pki-types",
- "rustls-webpki 0.102.8",
- "subtle",
- "zeroize",
-]
-
-[[package]]
-name = "rustls"
-version = "0.23.23"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "47796c98c480fce5406ef69d1c76378375492c3b0a0de587be0c1d9feb12f395"
-dependencies = [
- "aws-lc-rs",
- "log",
- "once_cell",
- "rustls-pki-types",
- "rustls-webpki 0.102.8",
- "subtle",
- "zeroize",
-]
-
-[[package]]
-name = "rustls-native-certs"
-version = "0.7.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e5bfb394eeed242e909609f56089eecfe5fda225042e8b171791b9c95f5931e5"
-dependencies = [
- "openssl-probe",
- "rustls-pemfile 2.2.0",
- "rustls-pki-types",
- "schannel",
- "security-framework 2.11.1",
-]
-
-[[package]]
-name = "rustls-native-certs"
-version = "0.8.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7fcff2dd52b58a8d98a70243663a0d234c4e2b79235637849d15913394a247d3"
-dependencies = [
- "openssl-probe",
- "rustls-pki-types",
- "schannel",
- "security-framework 3.2.0",
-]
-
-[[package]]
-name = "rustls-pemfile"
-version = "1.0.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1c74cae0a4cf6ccbbf5f359f08efdf8ee7e1dc532573bf0db71968cb56b1448c"
-dependencies = [
- "base64 0.21.7",
-]
-
-[[package]]
-name = "rustls-pemfile"
-version = "2.2.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "dce314e5fee3f39953d46bb63bb8a46d40c2f8fb7cc5a3b6cab2bde9721d6e50"
-dependencies = [
- "rustls-pki-types",
-]
-
-[[package]]
 name = "rustls-pki-types"
 version = "1.11.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "917ce264624a4b4db1c364dcc35bfca9ded014d0a958cd47ad3e960e988ea51c"
 
 [[package]]
-name = "rustls-webpki"
-version = "0.101.7"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8b6275d1ee7a1cd780b64aca7726599a1dbc893b1e64144529e55c3c2f745765"
-dependencies = [
- "ring",
- "untrusted 0.9.0",
-]
-
-[[package]]
-name = "rustls-webpki"
-version = "0.102.8"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9"
-dependencies = [
- "aws-lc-rs",
- "ring",
- "rustls-pki-types",
- "untrusted 0.9.0",
-]
-
-[[package]]
 name = "rustversion"
 version = "1.0.20"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -3033,36 +3030,13 @@
 checksum = "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49"
 
 [[package]]
-name = "sct"
-version = "0.7.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "da046153aa2352493d6cb7da4b6e5c0c057d8a1d0a9aa8560baffdd945acd414"
-dependencies = [
- "ring",
- "untrusted 0.9.0",
-]
-
-[[package]]
 name = "security-framework"
 version = "2.11.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "897b2245f0b511c87893af39b033e5ca9cce68824c4d7e7630b5a1d339658d02"
 dependencies = [
  "bitflags 2.9.0",
- "core-foundation 0.9.4",
- "core-foundation-sys",
- "libc",
- "security-framework-sys",
-]
-
-[[package]]
-name = "security-framework"
-version = "3.2.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "271720403f46ca04f7ba6f55d438f8bd878d6b8ca0a1046e8228c4145bcbb316"
-dependencies = [
- "bitflags 2.9.0",
- "core-foundation 0.10.0",
+ "core-foundation",
  "core-foundation-sys",
  "libc",
  "security-framework-sys",
@@ -3269,6 +3243,16 @@
 ]
 
 [[package]]
+name = "socket2"
+version = "0.6.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "233504af464074f9d066d7b5416c5f9b894a5862a6506e306f7b816cdd6f1807"
+dependencies = [
+ "libc",
+ "windows-sys 0.59.0",
+]
+
+[[package]]
 name = "spin"
 version = "0.9.8"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -3451,9 +3435,12 @@
 
 [[package]]
 name = "sync_wrapper"
-version = "0.1.2"
+version = "1.0.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160"
+checksum = "0bf256ce5efdfa370213c1dabab5935a12e49f2c58d15e9eac2870d3b4f27263"
+dependencies = [
+ "futures-core",
+]
 
 [[package]]
 name = "synstructure"
@@ -3468,15 +3455,16 @@
 
 [[package]]
 name = "sysinfo"
-version = "0.31.4"
+version = "0.36.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "355dbe4f8799b304b05e1b0f05fc59b2a18d36645cf169607da45bde2f69a1be"
+checksum = "252800745060e7b9ffb7b2badbd8b31cfa4aa2e61af879d0a3bf2a317c20217d"
 dependencies = [
- "core-foundation-sys",
  "libc",
  "memchr",
  "ntapi",
- "windows 0.57.0",
+ "objc2-core-foundation",
+ "objc2-io-kit",
+ "windows 0.61.3",
 ]
 
 [[package]]
@@ -3493,20 +3481,20 @@
 
 [[package]]
 name = "system-configuration"
-version = "0.5.1"
+version = "0.6.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ba3a3adc5c275d719af8cb4272ea1c4a6d668a777f37e115f6d11ddbc1c8e0e7"
+checksum = "3c879d448e9d986b661742763247d3693ed13609438cf3d006f51f5368a5ba6b"
 dependencies = [
- "bitflags 1.3.2",
- "core-foundation 0.9.4",
+ "bitflags 2.9.0",
+ "core-foundation",
  "system-configuration-sys",
 ]
 
 [[package]]
 name = "system-configuration-sys"
-version = "0.5.0"
+version = "0.6.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a75fb188eb626b924683e3b95e3a48e63551fcfb51949de2f06a9d91dbee93c9"
+checksum = "8e1d1b10ced5ca923a1fcb8d03e96b8d3268065d724548c0211415ff6ac6bac4"
 dependencies = [
  "core-foundation-sys",
  "libc",
@@ -3642,7 +3630,7 @@
  "parking_lot",
  "pin-project-lite",
  "signal-hook-registry",
- "socket2",
+ "socket2 0.5.8",
  "tokio-macros",
  "windows-sys 0.52.0",
 ]
@@ -3659,33 +3647,12 @@
 ]
 
 [[package]]
-name = "tokio-rustls"
-version = "0.24.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c28327cf380ac148141087fbfb9de9d7bd4e84ab5d2c28fbc911d753de8a7081"
-dependencies = [
- "rustls 0.21.12",
- "tokio",
-]
-
-[[package]]
-name = "tokio-rustls"
-version = "0.25.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "775e0c0f0adb3a2f22a00c4745d728b479985fc15ee7ca6a2608388c5569860f"
-dependencies = [
- "rustls 0.22.4",
- "rustls-pki-types",
- "tokio",
-]
-
-[[package]]
-name = "tokio-rustls"
-version = "0.26.2"
+name = "tokio-native-tls"
+version = "0.3.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8e727b36a1a0e8b74c376ac2211e40c2c8af09fb4013c60d910495810f008e9b"
+checksum = "bbae76ab933c85776efabc971569dd6119c580d8f5d448769dec1764bf796ef2"
 dependencies = [
- "rustls 0.23.23",
+ "native-tls",
  "tokio",
 ]
 
@@ -3702,17 +3669,15 @@
 
 [[package]]
 name = "tokio-tungstenite"
-version = "0.24.0"
+version = "0.27.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "edc5f74e248dc973e0dbb7b74c7e0d6fcc301c694ff50049504004ef4d0cdcd9"
+checksum = "489a59b6730eda1b0171fcfda8b121f4bee2b35cba8645ca35c5f7ba3eb736c1"
 dependencies = [
  "futures-util",
  "log",
- "rustls 0.23.23",
- "rustls-native-certs 0.8.1",
- "rustls-pki-types",
+ "native-tls",
  "tokio",
- "tokio-rustls 0.26.2",
+ "tokio-native-tls",
  "tungstenite",
 ]
 
@@ -3764,6 +3729,45 @@
 ]
 
 [[package]]
+name = "tower"
+version = "0.5.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "d039ad9159c98b70ecfd540b2573b97f7f52c3e8d9f8ad57a24b916a536975f9"
+dependencies = [
+ "futures-core",
+ "futures-util",
+ "pin-project-lite",
+ "sync_wrapper",
+ "tokio",
+ "tower-layer",
+ "tower-service",
+]
+
+[[package]]
+name = "tower-http"
+version = "0.6.6"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "adc82fd73de2a9722ac5da747f12383d2bfdb93591ee6c58486e0097890f05f2"
+dependencies = [
+ "bitflags 2.9.0",
+ "bytes",
+ "futures-util",
+ "http",
+ "http-body",
+ "iri-string",
+ "pin-project-lite",
+ "tower",
+ "tower-layer",
+ "tower-service",
+]
+
+[[package]]
+name = "tower-layer"
+version = "0.3.3"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "121c2a6cda46980bb0fcd1647ffaf6cd3fc79a013de288782836f6df9c48780e"
+
+[[package]]
 name = "tower-service"
 version = "0.3.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -3818,21 +3822,19 @@
 
 [[package]]
 name = "tungstenite"
-version = "0.24.0"
+version = "0.27.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "18e5b8366ee7a95b16d32197d0b2604b43a0be89dc5fac9f8e96ccafbaedda8a"
+checksum = "eadc29d668c91fcc564941132e17b28a7ceb2f3ebf0b9dae3e03fd7a6748eb0d"
 dependencies = [
- "byteorder",
  "bytes",
  "data-encoding",
- "http 1.3.1",
+ "http",
  "httparse",
  "log",
- "rand 0.8.5",
- "rustls 0.23.23",
- "rustls-pki-types",
+ "native-tls",
+ "rand 0.9.0",
  "sha1",
- "thiserror 1.0.69",
+ "thiserror 2.0.12",
  "utf-8",
 ]
 
@@ -3855,12 +3857,6 @@
 checksum = "a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a"
 
 [[package]]
-name = "untrusted"
-version = "0.9.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1"
-
-[[package]]
 name = "url"
 version = "2.5.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -3898,12 +3894,13 @@
 
 [[package]]
 name = "uuid"
-version = "1.15.1"
+version = "1.18.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e0f540e3240398cce6128b64ba83fdbdd86129c16a3aa1a3a252efd66eb3d587"
+checksum = "f33196643e165781c20a5ead5582283a7dacbb87855d867fbc2df3f81eddc1be"
 dependencies = [
  "getrandom 0.3.1",
- "rand 0.9.0",
+ "js-sys",
+ "wasm-bindgen",
 ]
 
 [[package]]
@@ -3913,6 +3910,12 @@
 checksum = "ba73ea9cf16a25df0c8caa16c51acb937d5712a8429db78a3ee29d5dcacd3a65"
 
 [[package]]
+name = "vcpkg"
+version = "0.2.15"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426"
+
+[[package]]
 name = "vergen"
 version = "9.0.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -4078,22 +4081,16 @@
 ]
 
 [[package]]
-name = "webpki"
-version = "0.22.4"
+name = "web-time"
+version = "1.1.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ed63aea5ce73d0ff405984102c42de94fc55a6b75765d621c65262469b3c9b53"
+checksum = "5a6580f308b1fad9207618087a65c04e7a10bc77e02c8e84e9b00dd4b12fa0bb"
 dependencies = [
- "ring",
- "untrusted 0.9.0",
+ "js-sys",
+ "wasm-bindgen",
 ]
 
 [[package]]
-name = "webpki-roots"
-version = "0.25.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5f20c57d8d7db6d3b86154206ae5d8fba62dd39573114de97c2cb0578251f8e1"
-
-[[package]]
 name = "which"
 version = "4.4.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -4169,12 +4166,24 @@
 
 [[package]]
 name = "windows"
-version = "0.57.0"
+version = "0.61.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "12342cb4d8e3b046f3d80effd474a7a02447231330ef77d71daa6fbc40681143"
+checksum = "9babd3a767a4c1aef6900409f85f5d53ce2544ccdfaa86dad48c91782c6d6893"
 dependencies = [
- "windows-core 0.57.0",
- "windows-targets 0.52.6",
+ "windows-collections",
+ "windows-core 0.61.2",
+ "windows-future",
+ "windows-link",
+ "windows-numerics",
+]
+
+[[package]]
+name = "windows-collections"
+version = "0.2.0"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "3beeceb5e5cfd9eb1d76b381630e82c4241ccd0d27f1a39ed41b2760b255c5e8"
+dependencies = [
+ "windows-core 0.61.2",
 ]
 
 [[package]]
@@ -4192,27 +4201,39 @@
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "12661b9c89351d684a50a8a643ce5f608e20243b9fb84687800163429f161d65"
 dependencies = [
- "windows-result",
+ "windows-result 0.1.2",
  "windows-targets 0.52.6",
 ]
 
 [[package]]
 name = "windows-core"
-version = "0.57.0"
+version = "0.61.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d2ed2439a290666cd67ecce2b0ffaad89c2a56b976b736e6ece670297897832d"
+checksum = "c0fdd3ddb90610c7638aa2b3a3ab2904fb9e5cdbecc643ddb3647212781c4ae3"
 dependencies = [
  "windows-implement",
  "windows-interface",
- "windows-result",
- "windows-targets 0.52.6",
+ "windows-link",
+ "windows-result 0.3.4",
+ "windows-strings",
+]
+
+[[package]]
+name = "windows-future"
+version = "0.2.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "fc6a41e98427b19fe4b73c550f060b59fa592d7d686537eebf9385621bfbad8e"
+dependencies = [
+ "windows-core 0.61.2",
+ "windows-link",
+ "windows-threading",
 ]
 
 [[package]]
 name = "windows-implement"
-version = "0.57.0"
+version = "0.60.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9107ddc059d5b6fbfbffdfa7a7fe3e22a226def0b2608f72e9d552763d3e1ad7"
+checksum = "a47fddd13af08290e67f4acabf4b459f647552718f683a7b415d290ac744a836"
 dependencies = [
  "proc-macro2",
  "quote",
@@ -4221,9 +4242,9 @@
 
 [[package]]
 name = "windows-interface"
-version = "0.57.0"
+version = "0.59.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "29bee4b38ea3cde66011baa44dba677c432a78593e202392d1e9070cf2a7fca7"
+checksum = "bd9211b69f8dcdfa817bfd14bf1c97c9188afa36f4750130fcdf3f400eca9fa8"
 dependencies = [
  "proc-macro2",
  "quote",
@@ -4232,9 +4253,30 @@
 
 [[package]]
 name = "windows-link"
-version = "0.1.0"
+version = "0.1.3"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "5e6ad25900d524eaabdbbb96d20b4311e1e7ae1699af4fb28c17ae66c80d798a"
+
+[[package]]
+name = "windows-numerics"
+version = "0.2.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6dccfd733ce2b1753b03b6d3c65edf020262ea35e20ccdf3e288043e6dd620e3"
+checksum = "9150af68066c4c5c07ddc0ce30421554771e528bde427614c61038bc2c92c2b1"
+dependencies = [
+ "windows-core 0.61.2",
+ "windows-link",
+]
+
+[[package]]
+name = "windows-registry"
+version = "0.5.3"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "5b8a9ed28765efc97bbc954883f4e6796c33a06546ebafacbabee9696967499e"
+dependencies = [
+ "windows-link",
+ "windows-result 0.3.4",
+ "windows-strings",
+]
 
 [[package]]
 name = "windows-result"
@@ -4246,21 +4288,30 @@
 ]
 
 [[package]]
-name = "windows-sys"
-version = "0.45.0"
+name = "windows-result"
+version = "0.3.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "75283be5efb2831d37ea142365f009c02ec203cd29a3ebecbc093d52315b66d0"
+checksum = "56f42bd332cc6c8eac5af113fc0c1fd6a8fd2aa08a0119358686e5160d0586c6"
 dependencies = [
- "windows-targets 0.42.2",
+ "windows-link",
+]
+
+[[package]]
+name = "windows-strings"
+version = "0.4.2"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "56e6c93f3a0c3b36176cb1327a4958a0353d5d166c2a35cb268ace15e91d3b57"
+dependencies = [
+ "windows-link",
 ]
 
 [[package]]
 name = "windows-sys"
-version = "0.48.0"
+version = "0.45.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9"
+checksum = "75283be5efb2831d37ea142365f009c02ec203cd29a3ebecbc093d52315b66d0"
 dependencies = [
- "windows-targets 0.48.5",
+ "windows-targets 0.42.2",
 ]
 
 [[package]]
@@ -4298,21 +4349,6 @@
 
 [[package]]
 name = "windows-targets"
-version = "0.48.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c"
-dependencies = [
- "windows_aarch64_gnullvm 0.48.5",
- "windows_aarch64_msvc 0.48.5",
- "windows_i686_gnu 0.48.5",
- "windows_i686_msvc 0.48.5",
- "windows_x86_64_gnu 0.48.5",
- "windows_x86_64_gnullvm 0.48.5",
- "windows_x86_64_msvc 0.48.5",
-]
-
-[[package]]
-name = "windows-targets"
 version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973"
@@ -4328,16 +4364,19 @@
 ]
 
 [[package]]
-name = "windows_aarch64_gnullvm"
-version = "0.42.2"
+name = "windows-threading"
+version = "0.1.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "597a5118570b68bc08d8d59125332c54f1ba9d9adeedeef5b99b02ba2b0698f8"
+checksum = "b66463ad2e0ea3bbf808b7f1d371311c80e115c0b71d60efc142cafbcfb057a6"
+dependencies = [
+ "windows-link",
+]
 
 [[package]]
 name = "windows_aarch64_gnullvm"
-version = "0.48.5"
+version = "0.42.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8"
+checksum = "597a5118570b68bc08d8d59125332c54f1ba9d9adeedeef5b99b02ba2b0698f8"
 
 [[package]]
 name = "windows_aarch64_gnullvm"
@@ -4353,12 +4392,6 @@
 
 [[package]]
 name = "windows_aarch64_msvc"
-version = "0.48.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc"
-
-[[package]]
-name = "windows_aarch64_msvc"
 version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469"
@@ -4371,12 +4404,6 @@
 
 [[package]]
 name = "windows_i686_gnu"
-version = "0.48.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e"
-
-[[package]]
-name = "windows_i686_gnu"
 version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b"
@@ -4395,12 +4422,6 @@
 
 [[package]]
 name = "windows_i686_msvc"
-version = "0.48.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406"
-
-[[package]]
-name = "windows_i686_msvc"
 version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66"
@@ -4413,12 +4434,6 @@
 
 [[package]]
 name = "windows_x86_64_gnu"
-version = "0.48.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e"
-
-[[package]]
-name = "windows_x86_64_gnu"
 version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78"
@@ -4431,12 +4446,6 @@
 
 [[package]]
 name = "windows_x86_64_gnullvm"
-version = "0.48.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc"
-
-[[package]]
-name = "windows_x86_64_gnullvm"
 version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d"
@@ -4449,12 +4458,6 @@
 
 [[package]]
 name = "windows_x86_64_msvc"
-version = "0.48.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538"
-
-[[package]]
-name = "windows_x86_64_msvc"
 version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec"
@@ -4469,16 +4472,6 @@
 ]
 
 [[package]]
-name = "winreg"
-version = "0.50.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "524e57b2c537c0f9b1e69f1965311ec12182b4122e45035b1508cd24d2adadb1"
-dependencies = [
- "cfg-if",
- "windows-sys 0.48.0",
-]
-
-[[package]]
 name = "wit-bindgen-rt"
 version = "0.33.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
@@ -4525,32 +4518,11 @@
 
 [[package]]
 name = "zerocopy"
-version = "0.7.35"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0"
-dependencies = [
- "byteorder",
- "zerocopy-derive 0.7.35",
-]
-
-[[package]]
-name = "zerocopy"
 version = "0.8.23"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "fd97444d05a4328b90e75e503a34bad781f14e28a823ad3557f0750df1ebcbc6"
 dependencies = [
- "zerocopy-derive 0.8.23",
-]
-
-[[package]]
-name = "zerocopy-derive"
-version = "0.7.35"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e"
-dependencies = [
- "proc-macro2",
- "quote",
- "syn",
+ "zerocopy-derive",
 ]
 
 [[package]]
diff -Naur spotifyd-0.4.1.old/Cargo.toml spotifyd-0.4.1/Cargo.toml
--- spotifyd-0.4.1.old/Cargo.toml	2025-09-23 09:09:43.119550747 +0200
+++ spotifyd-0.4.1/Cargo.toml	2025-09-23 14:06:36.603819153 +0200
@@ -124,30 +124,30 @@
 version = "0.2.82"
 
 [dependencies.librespot-audio]
-version = "0.6"
+version = "0.7.1"
 default-features = false
 
 [dependencies.librespot-connect]
-version = "0.6"
+version = "0.7.1"
 
 [dependencies.librespot-core]
-version = "0.6"
+version = "0.7.1"
 
 [dependencies.librespot-discovery]
-version = "0.6"
+version = "0.7.1"
 
 [dependencies.librespot-metadata]
-version = "0.6"
+version = "0.7.1"
 
 [dependencies.librespot-oauth]
-version = "0.6"
+version = "0.7.1"
 
 [dependencies.librespot-playback]
-version = "0.6"
+version = "0.7.1"
 default-features = false
 
 [dependencies.librespot-protocol]
-version = "0.6"
+version = "0.7.1"
 
 [dependencies.log]
 version = "0.4.6"
diff -Naur spotifyd-0.4.1.old/Cargo.toml.orig spotifyd-0.4.1/Cargo.toml.orig
--- spotifyd-0.4.1.old/Cargo.toml.orig	2025-09-23 09:09:43.119550747 +0200
+++ spotifyd-0.4.1/Cargo.toml.orig	1970-01-01 01:00:00.000000000 +0100
@@ -1,80 +0,0 @@
-[package]
-authors = ["Simon Persson <simon@flaskpost.org>", "Sven Lechner <sven.lechner@rwth-aachen.de>", "eladyn <eladyn@protonmail.com>"]
-edition = "2018"
-name = "spotifyd"
-description = "A Spotify daemon"
-repository = "https://github.com/Spotifyd/spotifyd"
-license = "GPL-3.0-only"
-version = "0.4.1"
-resolver = "2"
-rust-version = "1.82"
-
-[dependencies]
-alsa = { version = "0.9.1", optional = true }
-chrono = "0.4"
-dbus = { version = "0.9", optional = true }
-dbus-tokio = { version = "0.7.3", optional = true }
-dbus-crossroads = { version = "0.5.0", optional = true }
-fern = { version = "0.7.0", features = ["syslog-7", "colored"] }
-futures = "0.3.15"
-gethostname = "1.0.0"
-hex = "0.4"
-libc = "0.2.82"
-log = "0.4.6"
-serde = { version = "1.0.115", features = ["derive"] }
-sha-1 = "0.10"
-tokio = {version = "1.26.0", features = ["signal", "rt-multi-thread", "process", "io-std"] }
-tokio-stream = "0.1.7"
-url = "2.2.2"
-librespot-audio = { version = "0.6", default-features = false }
-librespot-playback = { version = "0.6", default-features = false }
-librespot-core = "0.6"
-librespot-discovery = "0.6"
-librespot-connect = "0.6"
-librespot-metadata = "0.6"
-librespot-protocol = "0.6"
-librespot-oauth = "0.6"
-toml = "0.8.19"
-color-eyre = "0.6"
-directories = "6.0.0"
-thiserror = "2.0"
-time = { version = "0.3.37", default-features = false, features = ["formatting"] }
-clap = { version = "4.5.23", features = ["derive"] }
-serde_ignored = "0.1.10"
-
-[target.'cfg(unix)'.dependencies]
-daemonize = "0.5"
-syslog = "7"
-
-[target.'cfg(target_os = "macos")'.dependencies]
-whoami = "1"
-
-[target.'cfg(target_os = "openbsd")'.dependencies]
-pledge = "0.4.2"
-
-[target.'cfg(not(any(target_arch = "aarch64", target_arch = "x86_64")))'.dependencies]
-aws-lc-rs = { version = "1.12.6", features = ["bindgen"] }
-
-[dev-dependencies]
-env_logger = "0.11"
-
-[features]
-alsa_backend = ["librespot-playback/alsa-backend", "dep:alsa"]
-dbus_mpris = ["dep:dbus", "dep:dbus-tokio", "dep:dbus-crossroads"]
-default = ["alsa_backend"]
-portaudio_backend = ["librespot-playback/portaudio-backend"]
-pulseaudio_backend = ["librespot-playback/pulseaudio-backend"]
-rodio_backend = ["librespot-playback/rodio-backend"]
-rodiojack_backend = ["librespot-playback/rodiojack-backend"]
-
-[package.metadata.deb]
-depends = "$auto, systemd, pulseaudio"
-features = ["pulseaudio_backend", "dbus_mpris"]
-assets = [
-    ["target/release/spotifyd", "usr/bin/", "755"],
-    ["README.md", "usr/share/doc/spotifyd/README", "644"],
-    ["contrib/spotifyd.service", "etc/systemd/user/", "644"],
-]
-
-[profile.release]
-lto = true
diff -Naur spotifyd-0.4.1.old/src/alsa_mixer.rs spotifyd-0.4.1/src/alsa_mixer.rs
--- spotifyd-0.4.1.old/src/alsa_mixer.rs	2025-09-23 09:09:43.120688310 +0200
+++ spotifyd-0.4.1/src/alsa_mixer.rs	2025-09-23 14:04:19.996812127 +0200
@@ -36,12 +36,12 @@
 }
 
 impl Mixer for AlsaMixer {
-    fn open(_: MixerConfig) -> AlsaMixer {
-        AlsaMixer {
+    fn open(_: MixerConfig) -> Result<AlsaMixer, librespot_core::Error> {
+        Ok(AlsaMixer {
             device: "default".to_string(),
             mixer: "Master".to_string(),
             linear_scaling: false,
-        }
+        })
     }
 
     fn volume(&self) -> u16 {
diff -Naur spotifyd-0.4.1.old/src/config.rs spotifyd-0.4.1/src/config.rs
--- spotifyd-0.4.1.old/src/config.rs	2025-09-23 09:09:43.120688310 +0200
+++ spotifyd-0.4.1/src/config.rs	2025-09-23 14:04:19.997009589 +0200
@@ -69,7 +69,6 @@
     UnknownSpotify,
     CarThing,
     Observer,
-    HomeThing,
 }
 
 impl From<DeviceType> for LSDeviceType {
@@ -93,7 +92,6 @@
             DeviceType::UnknownSpotify => LSDeviceType::UnknownSpotify,
             DeviceType::CarThing => LSDeviceType::CarThing,
             DeviceType::Observer => LSDeviceType::Observer,
-            DeviceType::HomeThing => LSDeviceType::HomeThing,
         }
     }
 }
@@ -596,7 +594,7 @@
 }
 
 pub(crate) fn get_config_file() -> Option<PathBuf> {
-    let etc_conf = format!("/etc/{}", CONFIG_FILE_NAME);
+    let etc_conf = format!("/etc/{CONFIG_FILE_NAME}");
     let dirs = directories::ProjectDirs::from("", "", "spotifyd")?;
     let mut path = dirs.config_dir().to_path_buf();
     path.push(CONFIG_FILE_NAME);
@@ -622,7 +620,7 @@
     pub(crate) audio_device: Option<String>,
     pub(crate) audio_format: LSAudioFormat,
     pub(crate) volume_controller: VolumeController,
-    pub(crate) initial_volume: Option<u16>,
+    pub(crate) initial_volume: u16,
     pub(crate) device_name: String,
     pub(crate) player_config: PlayerConfig,
     pub(crate) session_config: SessionConfig,
@@ -671,7 +669,7 @@
         .volume_controller
         .unwrap_or(VolumeController::SoftVolume);
 
-    let initial_volume: Option<u16> = config
+    let initial_volume: u16 = config
         .shared_config
         .initial_volume
         .filter(|val| {
@@ -682,7 +680,9 @@
                 false
             }
         })
-        .map(|volume| (volume as i32 * (u16::MAX as i32) / 100) as u16);
+        .map(|volume| (volume as i32 * (u16::MAX as i32) / 100) as u16)
+        .unwrap_or((90_i32 * (u16::MAX as i32) / 100) as u16); // default to 90%
+    warn!("initial_volume: {initial_volume}");
 
     let device_name = config
         .shared_config
diff -Naur spotifyd-0.4.1.old/src/dbus_mpris.rs spotifyd-0.4.1/src/dbus_mpris.rs
--- spotifyd-0.4.1.old/src/dbus_mpris.rs	2025-09-23 09:09:43.120688310 +0200
+++ spotifyd-0.4.1/src/dbus_mpris.rs	2025-09-23 14:04:19.997251905 +0200
@@ -13,11 +13,10 @@
     task::{Context, Poll},
     Future,
 };
-use librespot_connect::spirc::{Spirc, SpircLoadCommand};
+use librespot_connect::{LoadRequest, LoadRequestOptions, Spirc};
 use librespot_core::{spotify_id::SpotifyItemType, Session, SpotifyId};
 use librespot_metadata::audio::AudioItem;
 use librespot_playback::player::PlayerEvent;
-use librespot_protocol::spirc::TrackRef;
 use log::{debug, error, warn};
 use std::convert::TryFrom;
 use std::{
@@ -223,77 +222,78 @@
         debug!("handling event {event:?}");
         match event {
             PlayerEvent::VolumeChanged { volume } => {
-                self.volume = volume;
-                insert_attr(&mut changed, "Volume", self.mpris_volume());
-            }
+                        self.volume = volume;
+                        insert_attr(&mut changed, "Volume", self.mpris_volume());
+                    }
             PlayerEvent::Stopped { .. } => {
-                self.status = PlaybackStatus::Stopped;
-                self.audio_item = None;
-                insert_attr(
-                    &mut changed,
-                    "PlaybackStatus",
-                    self.status.to_mpris().to_string(),
-                );
-                insert_attr(&mut changed, "Metadata", self.to_metadata());
-            }
+                        self.status = PlaybackStatus::Stopped;
+                        self.audio_item = None;
+                        insert_attr(
+                            &mut changed,
+                            "PlaybackStatus",
+                            self.status.to_mpris().to_string(),
+                        );
+                        insert_attr(&mut changed, "Metadata", self.to_metadata());
+                    }
             PlayerEvent::Playing { position_ms, .. } => {
-                if self.status != PlaybackStatus::Playing {
-                    self.status = PlaybackStatus::Playing;
-                    insert_attr(
-                        &mut changed,
-                        "PlaybackStatus",
-                        self.status.to_mpris().to_string(),
-                    );
-                }
-                self.update_position(Duration::milliseconds(position_ms as i64));
-                seeked = true;
-            }
+                        if self.status != PlaybackStatus::Playing {
+                            self.status = PlaybackStatus::Playing;
+                            insert_attr(
+                                &mut changed,
+                                "PlaybackStatus",
+                                self.status.to_mpris().to_string(),
+                            );
+                        }
+                        self.update_position(Duration::milliseconds(position_ms as i64));
+                        seeked = true;
+                    }
             PlayerEvent::Paused { position_ms, .. } => {
-                if self.status != PlaybackStatus::Paused {
-                    self.status = PlaybackStatus::Paused;
-                    insert_attr(
-                        &mut changed,
-                        "PlaybackStatus",
-                        self.status.to_mpris().to_string(),
-                    )
-                }
-                self.update_position(Duration::milliseconds(position_ms as i64));
-                seeked = true;
-            }
+                        if self.status != PlaybackStatus::Paused {
+                            self.status = PlaybackStatus::Paused;
+                            insert_attr(
+                                &mut changed,
+                                "PlaybackStatus",
+                                self.status.to_mpris().to_string(),
+                            )
+                        }
+                        self.update_position(Duration::milliseconds(position_ms as i64));
+                        seeked = true;
+                    }
             PlayerEvent::TrackChanged { audio_item } => {
-                self.audio_item = Some(audio_item);
-                insert_attr(&mut changed, "Metadata", self.to_metadata());
-            }
+                        self.audio_item = Some(audio_item);
+                        insert_attr(&mut changed, "Metadata", self.to_metadata());
+                    }
             PlayerEvent::PositionCorrection { position_ms, .. }
-            | PlayerEvent::Seeked { position_ms, .. } => {
-                self.update_position(Duration::milliseconds(position_ms as i64));
-                seeked = true;
-            }
+                    | PlayerEvent::Seeked { position_ms, .. } => {
+                        self.update_position(Duration::milliseconds(position_ms as i64));
+                        seeked = true;
+                    }
             PlayerEvent::ShuffleChanged { shuffle } => {
-                self.shuffle = shuffle;
-                insert_attr(&mut changed, "Shuffle", self.shuffle);
-            }
-            PlayerEvent::RepeatChanged { repeat } => {
-                self.repeat = repeat.into();
-                insert_attr(
-                    &mut changed,
-                    "LoopStatus",
-                    self.repeat.to_mpris().to_string(),
-                )
-            }
+                        self.shuffle = shuffle;
+                        insert_attr(&mut changed, "Shuffle", self.shuffle);
+                    }
+            PlayerEvent::RepeatChanged { context: _, track  } => {
+                        self.repeat = track.into();
+                        insert_attr(
+                            &mut changed,
+                            "LoopStatus",
+                            self.repeat.to_mpris().to_string(),
+                        )
+                    }
             PlayerEvent::PlayRequestIdChanged { play_request_id } => {
-                self.play_request_id = Some(play_request_id);
-            }
+                        self.play_request_id = Some(play_request_id);
+                    }
             PlayerEvent::Preloading { .. }
-            | PlayerEvent::Loading { .. }
-            | PlayerEvent::TimeToPreloadNextTrack { .. }
-            | PlayerEvent::EndOfTrack { .. }
-            | PlayerEvent::Unavailable { .. }
-            | PlayerEvent::AutoPlayChanged { .. }
-            | PlayerEvent::FilterExplicitContentChanged { .. }
-            | PlayerEvent::SessionConnected { .. }
-            | PlayerEvent::SessionDisconnected { .. }
-            | PlayerEvent::SessionClientChanged { .. } => (),
+                    | PlayerEvent::Loading { .. }
+                    | PlayerEvent::TimeToPreloadNextTrack { .. }
+                    | PlayerEvent::EndOfTrack { .. }
+                    | PlayerEvent::Unavailable { .. }
+                    | PlayerEvent::AutoPlayChanged { .. }
+                    | PlayerEvent::FilterExplicitContentChanged { .. }
+                    | PlayerEvent::SessionConnected { .. }
+                    | PlayerEvent::SessionDisconnected { .. }
+                    | PlayerEvent::SessionClientChanged { .. } => (),
+                    | PlayerEvent::PositionChanged { .. } => (),
         }
 
         (changed, seeked)
@@ -632,15 +632,17 @@
         });
         let local_spirc = spirc.clone();
         b.method("PlayPause", (), (), move |_, _, (): ()| {
+            warn!("PlayPause method called via mpris");
             local_spirc.play_pause().map_err(|e| MethodErr::failed(&e))
         });
         let local_spirc = spirc.clone();
         b.method("Play", (), (), move |_, _, (): ()| {
+            warn!("Play method called via mpris");            
             local_spirc.play().map_err(|e| MethodErr::failed(&e))
         });
         let local_spirc = spirc.clone();
         b.method("Stop", (), (), move |_, _, (): ()| {
-            local_spirc.disconnect().map_err(|e| MethodErr::failed(&e))
+            local_spirc.disconnect(false).map_err(|e| MethodErr::failed(&e))
         });
 
         let local_spirc = spirc.clone();
@@ -705,58 +707,37 @@
         b.method("OpenUri", ("uri",), (), move |_, _, (uri,): (String,)| {
             let id = SpotifyId::from_uri(&uri).map_err(|e| MethodErr::invalid_arg(&e))?;
             let CurrentStateInner {
-                shuffle, repeat, ..
+                shuffle, ..
             } = *local_state.read()?;
 
-            fn id_to_trackref(id: &SpotifyId) -> TrackRef {
-                let mut trackref = TrackRef::new();
-                if let Ok(uri) = id.to_uri() {
-                    trackref.set_uri(uri);
-                } else {
-                    trackref.set_gid(id.to_raw().to_vec());
-                }
-                trackref
-            }
-
             let session = session.clone();
 
-            let (playing_track_index, context_uri, tracks) = Handle::current()
+            let (playing_track_index, context_uri) = Handle::current()
                 .block_on(async move {
                     use librespot_metadata::*;
                     Ok::<_, librespot_core::Error>(match id.item_type {
                         SpotifyItemType::Album => {
-                            let album = Album::get(&session, &id).await?;
-                            (0, uri, album.tracks().map(id_to_trackref).collect())
+                            (0, uri)
                         }
                         SpotifyItemType::Artist => {
-                            let artist = Artist::get(&session, &id).await?;
                             (
                                 0,
                                 uri,
-                                artist
-                                    .top_tracks
-                                    .for_country(&session.country())
-                                    .iter()
-                                    .map(id_to_trackref)
-                                    .collect(),
                             )
                         }
                         SpotifyItemType::Playlist => {
-                            let playlist = Playlist::get(&session, &id).await?;
-                            (0, uri, playlist.tracks().map(id_to_trackref).collect())
+                            (0, uri)
                         }
                         SpotifyItemType::Track => {
                             let track = Track::get(&session, &id).await?;
                             (
                                 track.number as u32,
                                 track.album.id.to_uri()?,
-                                vec![id_to_trackref(&track.id)],
                             )
                         }
-                        SpotifyItemType::Episode => (0, uri, vec![id_to_trackref(&id)]),
+                        SpotifyItemType::Episode => (0, uri),
                         SpotifyItemType::Show => {
-                            let show = Show::get(&session, &id).await?;
-                            (0, uri, show.episodes.iter().map(id_to_trackref).collect())
+                            (0, uri)
                         }
                         SpotifyItemType::Local | SpotifyItemType::Unknown => {
                             return Err(librespot_core::Error::unimplemented(
@@ -767,15 +748,14 @@
                 })
                 .map_err(|e| MethodErr::failed(&e))?;
 
-            local_spirc
-                .load(SpircLoadCommand {
-                    context_uri,
-                    start_playing: true,
-                    shuffle,
-                    repeat: repeat.into(),
-                    playing_track_index,
-                    tracks,
-                })
+            warn!("loading context_uri {context_uri} with playing_track_index {playing_track_index}");
+
+                local_spirc.load(LoadRequest::from_context_uri(context_uri, LoadRequestOptions{
+                    start_playing: true, 
+                    seek_to: 0, 
+                    context_options: Some(librespot_connect::LoadContextOptions::Options(librespot_connect::Options { shuffle, repeat: false, repeat_track: false })),
+                    playing_track: Some(librespot_connect::PlayingTrack::Index(playing_track_index))
+                }))
                 .map_err(|e| MethodErr::failed(&e))
         });
 
diff -Naur spotifyd-0.4.1.old/src/error.rs spotifyd-0.4.1/src/error.rs
--- spotifyd-0.4.1.old/src/error.rs	2025-09-23 09:09:43.120688310 +0200
+++ spotifyd-0.4.1/src/error.rs	2025-09-23 14:04:19.997369407 +0200
@@ -89,16 +89,14 @@
     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
         match self {
             ErrorKind::Subprocess { cmd, msg, shell } => match msg {
-                Message::None => write!(f, "Failed to execute {:?} using {:?}.", cmd, shell),
+                Message::None => write!(f, "Failed to execute {cmd} using {shell}."),
                 Message::Error(ref e) => write!(
                     f,
-                    "Failed to execute {:?} using {:?}. Error: {}",
-                    cmd, shell, e
+                    "Failed to execute {cmd} using {shell}. Error: {e}",
                 ),
                 Message::String(ref s) => write!(
                     f,
-                    "Failed to execute {:?} using {:?}. Error: {}",
-                    cmd, shell, s
+                    "Failed to execute {cmd} using {shell}. Error: {s}",
                 ),
             },
             ErrorKind::NormalisationPregainInvalid => write!(
diff -Naur spotifyd-0.4.1.old/src/main_loop.rs spotifyd-0.4.1/src/main_loop.rs
--- spotifyd-0.4.1.old/src/main_loop.rs	2025-09-23 09:09:43.120688310 +0200
+++ spotifyd-0.4.1/src/main_loop.rs	2025-09-23 14:04:19.997513138 +0200
@@ -14,7 +14,7 @@
     stream::Peekable,
     Future, FutureExt, StreamExt,
 };
-use librespot_connect::{config::ConnectConfig, spirc::Spirc};
+use librespot_connect::{ConnectConfig, Spirc};
 use librespot_core::{
     authentication::Credentials, cache::Cache, config::DeviceType, session::Session, Error,
     SessionConfig,
@@ -81,8 +81,8 @@
     pub(crate) backend: fn(Option<String>, AudioFormat) -> Box<dyn Sink>,
     pub(crate) audio_device: Option<String>,
     pub(crate) audio_format: AudioFormat,
-    pub(crate) has_volume_ctrl: bool,
-    pub(crate) initial_volume: Option<u16>,
+    pub(crate) disable_volume: bool,
+    pub(crate) initial_volume: u16,
     pub(crate) shell: String,
     pub(crate) device_type: DeviceType,
     pub(crate) device_name: String,
@@ -126,7 +126,8 @@
                     device_type: self.device_type,
                     is_group: false,
                     initial_volume: self.initial_volume,
-                    has_volume_ctrl: self.has_volume_ctrl,
+                    disable_volume: self.disable_volume,
+                    volume_steps: 64,
                 },
                 session.clone(),
                 creds.clone(),
diff -Naur spotifyd-0.4.1.old/src/no_mixer.rs spotifyd-0.4.1/src/no_mixer.rs
--- spotifyd-0.4.1.old/src/no_mixer.rs	2025-09-23 09:09:43.120688310 +0200
+++ spotifyd-0.4.1/src/no_mixer.rs	2025-09-23 14:04:19.997578942 +0200
@@ -3,8 +3,8 @@
 pub struct NoMixer;
 
 impl Mixer for NoMixer {
-    fn open(_: MixerConfig) -> NoMixer {
-        NoMixer {}
+    fn open(_: MixerConfig) -> Result<NoMixer, librespot_core::Error> {
+        Ok(NoMixer {})
     }
 
     fn volume(&self) -> u16 {
diff -Naur spotifyd-0.4.1.old/src/process.rs spotifyd-0.4.1/src/process.rs
--- spotifyd-0.4.1.old/src/process.rs	2025-09-23 09:09:43.120688310 +0200
+++ spotifyd-0.4.1/src/process.rs	2025-09-23 14:04:19.997747519 +0200
@@ -50,152 +50,153 @@
     let mut env = HashMap::new();
     match event {
         PlayerEvent::TrackChanged { audio_item } => {
-            env.insert("PLAYER_EVENT", "change".to_string());
-            audio_item_to_env(audio_item, &mut env);
-        }
+                        env.insert("PLAYER_EVENT", "change".to_string());
+                        audio_item_to_env(audio_item, &mut env);
+            }
         PlayerEvent::Playing {
-            track_id,
-            play_request_id,
-            position_ms,
-        } => {
-            env.insert("PLAYER_EVENT", "start".to_string());
-            env.insert("TRACK_ID", track_id.to_base62().unwrap());
-            env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
-            env.insert("POSITION_MS", position_ms.to_string());
-        }
+                track_id,
+                play_request_id,
+                position_ms,
+            } => {
+                env.insert("PLAYER_EVENT", "start".to_string());
+                env.insert("TRACK_ID", track_id.to_base62().unwrap());
+                env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
+                env.insert("POSITION_MS", position_ms.to_string());
+            }
         PlayerEvent::Stopped {
-            track_id,
-            play_request_id,
-        } => {
-            env.insert("PLAYER_EVENT", "stop".to_string());
-            env.insert("TRACK_ID", track_id.to_base62().unwrap());
-            env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
-        }
+                track_id,
+                play_request_id,
+            } => {
+                env.insert("PLAYER_EVENT", "stop".to_string());
+                env.insert("TRACK_ID", track_id.to_base62().unwrap());
+                env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
+            }
         PlayerEvent::Loading {
-            track_id,
-            play_request_id,
-            position_ms,
-        } => {
-            env.insert("PLAYER_EVENT", "load".to_string());
-            env.insert("TRACK_ID", track_id.to_base62().unwrap());
-            env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
-            env.insert("POSITION_MS", position_ms.to_string());
-        }
+                track_id,
+                play_request_id,
+                position_ms,
+            } => {
+                env.insert("PLAYER_EVENT", "load".to_string());
+                env.insert("TRACK_ID", track_id.to_base62().unwrap());
+                env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
+                env.insert("POSITION_MS", position_ms.to_string());
+            }
         PlayerEvent::Paused {
-            track_id,
-            play_request_id,
-            position_ms,
-        } => {
-            env.insert("PLAYER_EVENT", "pause".to_string());
-            env.insert("TRACK_ID", track_id.to_base62().unwrap());
-            env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
-            env.insert("POSITION_MS", position_ms.to_string());
-        }
+                track_id,
+                play_request_id,
+                position_ms,
+            } => {
+                env.insert("PLAYER_EVENT", "pause".to_string());
+                env.insert("TRACK_ID", track_id.to_base62().unwrap());
+                env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
+                env.insert("POSITION_MS", position_ms.to_string());
+            }
         PlayerEvent::TimeToPreloadNextTrack {
-            track_id,
-            play_request_id,
-        } => {
-            env.insert("PLAYER_EVENT", "preload".to_string());
-            env.insert("TRACK_ID", track_id.to_base62().unwrap());
-            env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
-        }
+                track_id,
+                play_request_id,
+            } => {
+                env.insert("PLAYER_EVENT", "preload".to_string());
+                env.insert("TRACK_ID", track_id.to_base62().unwrap());
+                env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
+            }
         PlayerEvent::EndOfTrack {
-            track_id,
-            play_request_id,
-        } => {
-            env.insert("PLAYER_EVENT", "endoftrack".to_string());
-            env.insert("TRACK_ID", track_id.to_base62().unwrap());
-            env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
-        }
+                track_id,
+                play_request_id,
+            } => {
+                env.insert("PLAYER_EVENT", "endoftrack".to_string());
+                env.insert("TRACK_ID", track_id.to_base62().unwrap());
+                env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
+            }
         PlayerEvent::VolumeChanged { volume } => {
-            env.insert("PLAYER_EVENT", "volumeset".to_string());
-            env.insert("VOLUME", volume.to_string());
-        }
+                env.insert("PLAYER_EVENT", "volumeset".to_string());
+                env.insert("VOLUME", volume.to_string());
+            }
         PlayerEvent::Unavailable {
-            play_request_id,
-            track_id,
-        } => {
-            env.insert("PLAYER_EVENT", "unavailable".to_string());
-            env.insert("TRACK_ID", track_id.to_base62().unwrap());
-            env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
-        }
+                play_request_id,
+                track_id,
+            } => {
+                env.insert("PLAYER_EVENT", "unavailable".to_string());
+                env.insert("TRACK_ID", track_id.to_base62().unwrap());
+                env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
+            }
         PlayerEvent::Preloading { track_id } => {
-            env.insert("PLAYER_EVENT", "preloading".to_string());
-            env.insert("TRACK_ID", track_id.to_base62().unwrap());
-        }
+                env.insert("PLAYER_EVENT", "preloading".to_string());
+                env.insert("TRACK_ID", track_id.to_base62().unwrap());
+            }
         PlayerEvent::PositionCorrection {
-            play_request_id,
-            track_id,
-            position_ms,
-        } => {
-            env.insert("PLAYER_EVENT", "positioncorrection".to_string());
-            env.insert("TRACK_ID", track_id.to_base62().unwrap());
-            env.insert("POSITION_MS", position_ms.to_string());
-            env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
-        }
+                play_request_id,
+                track_id,
+                position_ms,
+            } => {
+                env.insert("PLAYER_EVENT", "positioncorrection".to_string());
+                env.insert("TRACK_ID", track_id.to_base62().unwrap());
+                env.insert("POSITION_MS", position_ms.to_string());
+                env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
+            }
         PlayerEvent::Seeked {
-            play_request_id,
-            track_id,
-            position_ms,
-        } => {
-            env.insert("PLAYER_EVENT", "seeked".to_string());
-            env.insert("TRACK_ID", track_id.to_base62().unwrap());
-            env.insert("POSITION_MS", position_ms.to_string());
-            env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
-        }
+                play_request_id,
+                track_id,
+                position_ms,
+            } => {
+                env.insert("PLAYER_EVENT", "seeked".to_string());
+                env.insert("TRACK_ID", track_id.to_base62().unwrap());
+                env.insert("POSITION_MS", position_ms.to_string());
+                env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
+            }
         PlayerEvent::PlayRequestIdChanged { play_request_id } => {
-            env.insert("PLAYER_EVENT", "playrequestid_changed".to_string());
-            env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
-        }
+                env.insert("PLAYER_EVENT", "playrequestid_changed".to_string());
+                env.insert("PLAY_REQUEST_ID", play_request_id.to_string());
+            }
         PlayerEvent::SessionConnected {
-            connection_id,
-            user_name,
-        } => {
-            env.insert("PLAYER_EVENT", "sessionconnected".to_string());
-            env.insert("USERNAME", user_name);
-            env.insert("CONNECTION_ID", connection_id);
-        }
+                connection_id,
+                user_name,
+            } => {
+                env.insert("PLAYER_EVENT", "sessionconnected".to_string());
+                env.insert("USERNAME", user_name);
+                env.insert("CONNECTION_ID", connection_id);
+            }
         PlayerEvent::SessionDisconnected {
-            connection_id,
-            user_name,
-        } => {
-            env.insert("PLAYER_EVENT", "sessiondisconnected".to_string());
-            env.insert("USERNAME", user_name);
-            env.insert("CONNECTION_ID", connection_id);
-        }
+                connection_id,
+                user_name,
+            } => {
+                env.insert("PLAYER_EVENT", "sessiondisconnected".to_string());
+                env.insert("USERNAME", user_name);
+                env.insert("CONNECTION_ID", connection_id);
+            }
         PlayerEvent::SessionClientChanged {
-            client_id,
-            client_name,
-            client_brand_name,
-            client_model_name,
-        } => {
-            env.insert("PLAYER_EVENT", "clientchanged".to_string());
-            env.insert("CLIENT_ID", client_id);
-            env.insert("CLIENT_NAME", client_name);
-            env.insert("CLIENT_BRAND", client_brand_name);
-            env.insert("CLIENT_MODEL", client_model_name);
-        }
+                client_id,
+                client_name,
+                client_brand_name,
+                client_model_name,
+            } => {
+                env.insert("PLAYER_EVENT", "clientchanged".to_string());
+                env.insert("CLIENT_ID", client_id);
+                env.insert("CLIENT_NAME", client_name);
+                env.insert("CLIENT_BRAND", client_brand_name);
+                env.insert("CLIENT_MODEL", client_model_name);
+            }
         PlayerEvent::ShuffleChanged { shuffle } => {
-            env.insert("PLAYER_EVENT", "shuffle_changed".to_string());
-            env.insert("SHUFFLE", shuffle.to_string());
-        }
-        PlayerEvent::RepeatChanged { repeat } => {
-            env.insert("PLAYER_EVENT", "repeat_changed".to_string());
-            let val = match repeat {
-                true => "all",
-                false => "none",
-            }
-            .to_string();
-            env.insert("REPEAT", val);
-        }
+                env.insert("PLAYER_EVENT", "shuffle_changed".to_string());
+                env.insert("SHUFFLE", shuffle.to_string());
+            }
+        PlayerEvent::RepeatChanged { context: _, track } => {
+                env.insert("PLAYER_EVENT", "repeat_changed".to_string());
+                let val = match track {
+                    true => "all",
+                    false => "none",
+                }
+                .to_string();
+                env.insert("REPEAT", val);
+            }
         PlayerEvent::AutoPlayChanged { auto_play } => {
-            env.insert("PLAYER_EVENT", "autoplay_changed".to_string());
-            env.insert("AUTOPLAY", auto_play.to_string());
-        }
+                env.insert("PLAYER_EVENT", "autoplay_changed".to_string());
+                env.insert("AUTOPLAY", auto_play.to_string());
+            }
         PlayerEvent::FilterExplicitContentChanged { filter } => {
-            env.insert("PLAYER_EVENT", "filterexplicit_changed".to_string());
-            env.insert("FILTEREXPLICIT", filter.to_string());
-        }
+                env.insert("PLAYER_EVENT", "filterexplicit_changed".to_string());
+                env.insert("FILTEREXPLICIT", filter.to_string());
+            }
+        PlayerEvent::PositionChanged { play_request_id: _, track_id: _, position_ms: _ } => todo!(),
     }
     spawn_program(shell, cmd, env)
 }
diff -Naur spotifyd-0.4.1.old/src/setup.rs spotifyd-0.4.1/src/setup.rs
--- spotifyd-0.4.1.old/src/setup.rs	2025-09-23 09:09:43.120688310 +0200
+++ spotifyd-0.4.1/src/setup.rs	2025-09-23 14:04:19.997900738 +0200
@@ -44,7 +44,8 @@
             }
             _ => {
                 info!("Using software volume controller.");
-                Arc::new(mixer::softmixer::SoftMixer::open(MixerConfig::default()))
+                let soft_mixer = mixer::softmixer::SoftMixer::open(MixerConfig::default()).expect("softmixer should initialize");
+                Arc::new(soft_mixer)
             }
         }
     };
@@ -53,8 +54,6 @@
     let session_config = config.session_config;
     let backend = config.backend.clone();
 
-    let has_volume_ctrl = !matches!(config.volume_controller, config::VolumeController::None);
-
     let zeroconf_port = config.zeroconf_port.unwrap_or(0);
 
     let creds = if let Some(creds) = config.oauth_cache.as_ref().and_then(|c| c.credentials()) {
@@ -135,7 +134,7 @@
         player_config,
         backend,
         initial_volume: config.initial_volume,
-        has_volume_ctrl,
+        disable_volume: false,
         shell: config.shell,
         device_type: config.device_type,
         device_name: config.device_name,
